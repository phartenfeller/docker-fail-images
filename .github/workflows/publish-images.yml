name: Docker

on:
  push:
    # Publish `main` as Docker `latest` image.
    branches:
      - main

env:
  CRASH_IMAGE: crash-img
  STUCK_IMAGE: stuck-img
  VERSION: latest

jobs:
  push:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Log into GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build Image crash-img
        run: |
          cd ./crash-img
          docker build . --file Dockerfile -t $CRASH_IMAGE

      - name: Push crash-img to GitHub Container Registry
        run: |
          IMAGE_ID=ghcr.io/phartenfeller/$CRASH_IMAGE
          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          # Strip git ref prefix from version
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          docker tag $CRASH_IMAGE $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION

      - name: Build Image stuck-img
        run: |
          cd ./stuck-img
          docker build . --file Dockerfile -t $STUCK_IMAGE

      - name: Push stuck-img to GitHub Container Registry
        run: |
          IMAGE_ID=ghcr.io/phartenfeller/$STUCK_IMAGE
          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          # Strip git ref prefix from version
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          docker tag $CRASH_IMAGE $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
